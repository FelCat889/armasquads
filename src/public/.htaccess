RewriteEngine On
# www to non www
RewriteCond %{HTTP_HOST} ^www\.(.*)$ [NC]
RewriteRule ^(.*)$ http://%1/$1 [R=301,L]

# Redirect old Path Locale Links to site
RewriteRule ^en/(.*)$ /$1 [L,R=301]
RewriteRule ^de/(.*)$ /$1 [L,R=301]

# The following rule tells Apache that if the requested filename
# exists, simply serve it.
RewriteCond %{REQUEST_FILENAME} -s [OR]
RewriteCond %{REQUEST_FILENAME} -l [OR]
RewriteCond %{REQUEST_FILENAME} -d
RewriteRule ^.*$ - [NC,L]

# add trailing slash at the end
#RewriteCond %{REQUEST_URI} !([a-f0-9]{32})\.paa$
#RewriteCond %{REQUEST_URI} !squad\.dtd$
#RewriteCond %{REQUEST_URI} !squad\.xml$
#RewriteCond %{REQUEST_URI} !squad\.xsl$
#RewriteCond %{REQUEST_URI} !squad\.css$
#RewriteCond %{REQUEST_FILENAME} !-f
#RewriteCond %{REQUEST_URI} !(.*)/$
#RewriteRule (.*)$ http://%{HTTP_HOST}/$1/ [L,R=301]

# The following rewrites all other queries to index.php. The 
# condition ensures that if you are using Apache aliases to do
# mass virtual hosting, the base path will be prepended to 
# allow proper resolution of the index.php file; it will work
# in non-aliased environments as well, providing a safe, one-size 
# fits all solution.
RewriteCond %{REQUEST_URI}::$1 ^(/.+)(.+)::\2$
RewriteRule ^(.*) - [E=BASE:%1]
RewriteRule ^(.*)$ %{ENV:BASE}index.php [NC,L]
